{"ast":null,"code":"var _jsxFileName = \"/home/jkennedy/Documents/term4/service_based_architectures/project with docker/microservices/dashboard-ui/src/components/EndpointAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EndpointAnalyzer(props) {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [log, setLog] = useState(null);\n  const [error, setError] = useState(null);\n  const rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\n\n  const getAnalyzer = () => {\n    fetch(`http://acit3855-lab06.eastus2.cloudapp.azure.com:8110/${props.endpoint}?index=${rand_val}`).then(res => res.json()).then(result => {\n      console.log(\"Received Analyzer Results for \" + props.endpoint);\n      setLog(result);\n      setIsLoaded(true);\n    }, error => {\n      setError(error);\n      setIsLoaded(true);\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => getAnalyzer(), 4000); // Update every 4 seconds\n    return () => clearInterval(interval);\n  }, [getAnalyzer]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Error found when fetching from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else if (isLoaded === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  } else if (isLoaded === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [props.endpoint, \"-\", rand_val]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), JSON.stringify(log)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(EndpointAnalyzer, \"z2lNyvo5MM5Nme+Oqfw9gedXEZk=\");\n_c = EndpointAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"EndpointAnalyzer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EndpointAnalyzer","props","_s","isLoaded","setIsLoaded","log","setLog","error","setError","rand_val","Math","floor","random","getAnalyzer","fetch","endpoint","then","res","json","result","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/jkennedy/Documents/term4/service_based_architectures/project with docker/microservices/dashboard-ui/src/components/EndpointAnalyzer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../App.css';\r\n\r\nexport default function EndpointAnalyzer(props) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [log, setLog] = useState(null);\r\n    const [error, setError] = useState(null)\r\n\tconst rand_val = Math.floor(Math.random() * 100); // Get a random event from the event store\r\n\r\n    const getAnalyzer = () => {\r\n        fetch(`http://acit3855-lab06.eastus2.cloudapp.azure.com:8110/${props.endpoint}?index=${rand_val}`)\r\n            .then(res => res.json())\r\n            .then((result)=>{\r\n\t\t\t\tconsole.log(\"Received Analyzer Results for \" + props.endpoint)\r\n                setLog(result);\r\n                setIsLoaded(true);\r\n            },(error) =>{\r\n                setError(error)\r\n                setIsLoaded(true);\r\n            })\r\n    }\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => getAnalyzer(), 4000); // Update every 4 seconds\r\n\t\treturn() => clearInterval(interval);\r\n    }, [getAnalyzer]);\r\n\r\n    if (error){\r\n        return (<div className={\"error\"}>Error found when fetching from API</div>)\r\n    } else if (isLoaded === false){\r\n        return(<div>Loading...</div>)\r\n    } else if (isLoaded === true){\r\n        \r\n        return (\r\n            <div>\r\n                <h3>{props.endpoint}-{rand_val}</h3>\r\n                {JSON.stringify(log)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAMY,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;EAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,yDAAyDb,KAAK,CAACc,QAAQ,UAAUN,QAAQ,EAAE,CAAC,CAC7FO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,MAAM,IAAG;MACxBC,OAAO,CAACf,GAAG,CAAC,gCAAgC,GAAGJ,KAAK,CAACc,QAAQ,CAAC;MAClDT,MAAM,CAACa,MAAM,CAAC;MACdf,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,EAAEG,KAAK,IAAI;MACRC,QAAQ,CAACD,KAAK,CAAC;MACfH,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;EACV,CAAC;EACJR,SAAS,CAAC,MAAM;IACf,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAMT,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACzD,OAAM,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACjC,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,IAAIN,KAAK,EAAC;IACN,oBAAQR,OAAA;MAAKyB,SAAS,EAAE,OAAQ;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7E,CAAC,MAAM,IAAI1B,QAAQ,KAAK,KAAK,EAAC;IAC1B,oBAAOJ,OAAA;MAAA0B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC,CAAC,MAAM,IAAI1B,QAAQ,KAAK,IAAI,EAAC;IAEzB,oBACIJ,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,GAAKxB,KAAK,CAACc,QAAQ,EAAC,GAAC,EAACN,QAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACnCC,IAAI,CAACC,SAAS,CAAC1B,GAAG,CAAC;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEd;AACJ;AAAC3B,EAAA,CApCuBF,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}